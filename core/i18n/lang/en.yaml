ErrInvalidParams: "Request parameter error: {{ .detail }}"
ErrTokenParse: "Token generation error: {{ .detail }}"
ErrInitialPassword: "Initial password error"
ErrInternalServer: "Service internal error: {{ .detail }}"
ErrRecordExist: "Record already exists"
ErrRecordNotFound: "Records not found"
ErrTransform: "Type conversion failure: {{ .detail }}"
ErrNotLogin: "User is not Login: {{ .detail }}"
ErrPasswordExpired: "The current password has expired: {{ .detail }}"
ErrNotSupportType: "The system does not support the current type: {{ .detail }}"
ErrProxy: "Request error, please check the node status: {{ .detail }}"

#common
ErrNameIsExist: "Name is already exist"
ErrDemoEnvironment: "Demo server, prohibit this operation!"
ErrEntrance: "Security entrance information error. Please check and try again!"
ErrGroupIsUsed: "The group is in use and cannot be deleted"
ErrLocalDelete: "Unable to delete local node!"

#app
ErrPortInUsed: "{{ .detail }} port already in use"
ErrCreateHttpClient: "Failed to create HTTP request {{.err}}"
ErrHttpReqTimeOut: "Request timed out {{.err}}"
ErrHttpReqFailed: "Request failed {{.err}}"
ErrHttpReqNotFound: "The file does not exist"
ErrNoSuchHost: "Network connection failed"

#backup
ErrBackupInUsed: "The backup account is currently in use in a scheduled task and cannot be deleted."
ErrBackupCheck: "Backup account test connection failed {{.err}}"
ErrBackupLocalDelete: "Deleting local server backup accounts is not currently supported."

#task
TaskStart: "{{.name}} Task Start [START]"
TaskEnd: "{{.name}} Task End [COMPLETED]"
TaskFailed: "{{.name}} Task Failed"
TaskTimeout: "{{.name}} Timeout"
TaskSuccess: "{{.name}} Task Successful"
TaskRetry: "Starting the {{.name}} retry"
SubTaskSuccess: "{{ .name }} Successful"
SubTaskFailed: "{{ .name }} Failed: {{ .err }}"
TaskInstall: "Install"
TaskUninstall: "Uninstall"
TaskCreate: "Create"
TaskDelete: "Delete"
TaskUpgrade: "Upgrade"
TaskUpdate: "Update"
TaskRestart: "Restart"
TaskRollback: "Rollback"
SuccessStatus: "{{ .name }} Successful" 
FailedStatus: "{{ .name }} Failed {{.err}}"
PullImage: "Pull Image"
Start: "Start"
Run: "Launch"
Stop: "Stop"
SubTask: "Subtask"

#upgrade node
NodeUpgrade: "Upgrade Node {name}"
NewSSHClient: "Initialize SSH Connection"
BackupBeforeUpgrade: "Backup Data Before Upgrade"
UploadUpgradeFile: "Distribute Upgrade Required Files"
RestartAfterUpgrade: "Start Service After Upgrade"

#add node
TaskAddNode: "Add Node"
GenerateSSLInfo: "Generate Node SSL Information"
MakeAgentPackage: "Generate Node Installation Package"
SendAgent: "Distribute Node Installation Package"
StartService: "Start Service"